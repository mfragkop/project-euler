/************************************************************
 * Project Euler 2											*
 * Each new term in the Fibonacci sequence is generated by	*
 *  adding the previous two terms. By starting with 1 and 2,*
 *   the first 10 terms will be: 							*
 *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...					*
 *   														*
 * By considering the terms in the Fibonacci sequence whose	*
 * values do not exceed four million, find the sum of 		*
 * the even-valued terms.									*
 ************************************************************/


public class EvenFibonacciNumbers {
	
	private static int fib(int a){
		if( a==1 ){
			return 1;
		}
		else if (a == 2){
			return 2;
		}
		else{
			return fib(a-1)+fib(a-2);
		}
	}
	
	public static int addEvenFib(int MAX_NUMBER){
		boolean limit_exceeded = false;
		int i = 1;
		int sumOfEvens = 0;
		while(!limit_exceeded){
			int f = fib(i);
			if ( f > MAX_NUMBER){
				limit_exceeded = true;
			}
			if( f  % 2 == 0 ){
				sumOfEvens += f; 
			}
			i++;
		}
		return sumOfEvens;
	}

	private static final int MAX_NUMBER = 4000000;

	public static void main(String[] args){
		System.out.println(EvenFibonacciNumbers.addEvenFib(MAX_NUMBER));
	}
}
